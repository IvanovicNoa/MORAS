function Graph.main 0
call Graph.drawAxes 0
pop temp 0
call Graph.drawFunctionGraph 0
pop temp 0
push constant 0
return
function Graph.drawAxes 1
push constant 128
pop local 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push constant 0
push local 0
push constant 255
push local 0
call Screen.drawLine 4
pop temp 0
push local 0
push constant 0
push local 0
push constant 255
call Screen.drawLine 4
pop temp 0
push constant 0
return
function Graph.drawFunctionGraph 9
push constant 32
neg
pop local 0
label WHILE_EXP0
push local 0
push constant 32
lt
not
if-goto WHILE_END0
push local 0
call Graph.f 1
pop local 1
push constant 0
not
pop local 7
push local 1
push constant 32
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
pop local 7
goto IF_END0
label IF_FALSE0
push local 1
push constant 32
neg
lt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
pop local 7
label IF_FALSE1
label IF_END0
push local 0
push constant 1
add
call Graph.f 1
pop local 2
push constant 0
not
pop local 8
push local 2
push constant 32
gt
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push constant 0
pop local 8
goto IF_END2
label IF_FALSE2
push local 2
push constant 32
neg
lt
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push constant 0
pop local 8
label IF_FALSE3
label IF_END2
push local 7
push local 8
and
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push constant 128
push local 0
push constant 4
call Math.multiply 2
add
pop local 3
push constant 128
push local 1
push constant 4
call Math.multiply 2
sub
pop local 4
push constant 128
push local 0
push constant 1
add
push constant 4
call Math.multiply 2
add
pop local 5
push constant 128
push local 2
push constant 4
call Math.multiply 2
sub
pop local 6
push constant 0
not
call Screen.setColor 1
pop temp 0
push local 3
push local 4
push local 5
push local 6
call Screen.drawLine 4
pop temp 0
label IF_FALSE4
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Graph.f 0
push argument 0
push argument 0
call Math.multiply 2
push constant 32
call Math.divide 2
return
